import { RacesService } from './races.service';
import { RaceFilterDto } from './races.schema';
export declare class RacesController {
    private readonly racesService;
    constructor(racesService: RacesService);
    getRaces(filterDto: RaceFilterDto): Promise<{
        Place: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            brDatabaseId: number;
            slug: string;
            state: string;
            name: string;
            geoId: string;
            mtfcc: string | null;
            cityLargest: string | null;
            countyName: string | null;
            population: number | null;
            density: number | null;
            incomeHouseholdMedian: number | null;
            unemploymentRate: number | null;
            homeValue: number | null;
            parentId: string | null;
        } | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        brDatabaseId: number | null;
        slug: string;
        state: string;
        salary: string | null;
        normalizedPositionName: string | null;
        positionDescription: string | null;
        brHashId: string | null;
        electionDate: Date;
        positionGeoid: string | null;
        positionLevel: import(".prisma/client").$Enums.PositionLevel;
        positionNames: string[];
        filingOfficeAddress: string | null;
        filingPhoneNumber: string | null;
        paperworkInstructions: string | null;
        filingRequirements: string | null;
        isRunoff: boolean | null;
        isPrimary: boolean | null;
        partisanType: string | null;
        filingDateStart: Date | null;
        filingDateEnd: Date | null;
        employmentType: string | null;
        eligibilityRequirements: string | null;
        subAreaName: string | null;
        subAreaValue: string | null;
        frequency: number[];
        placeId: string | null;
        Candidacies: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            brDatabaseId: number;
            slug: string;
            firstName: string;
            lastName: string;
            party: string | null;
            placeName: string | null;
            state: string | null;
            image: string | null;
            about: string | null;
            urls: string[];
            electionFrequency: number[];
            salary: string | null;
            normalizedPositionName: string | null;
            positionName: string | null;
            positionDescription: string | null;
            raceId: string | null;
        }[];
        _count: {
            Place: number;
            Candidacies: number;
        };
    }[]>;
}
