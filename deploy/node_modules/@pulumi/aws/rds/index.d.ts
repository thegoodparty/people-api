export { CertificateArgs, CertificateState } from "@pulumi/aws/rds/certificate";
export type Certificate = import("@pulumi/aws/rds/certificate").Certificate;
export declare const Certificate: typeof import("@pulumi/aws/rds/certificate").Certificate;
export { ClusterArgs, ClusterState } from "@pulumi/aws/rds/cluster";
export type Cluster = import("@pulumi/aws/rds/cluster").Cluster;
export declare const Cluster: typeof import("@pulumi/aws/rds/cluster").Cluster;
export { ClusterActivityStreamArgs, ClusterActivityStreamState } from "@pulumi/aws/rds/clusterActivityStream";
export type ClusterActivityStream = import("@pulumi/aws/rds/clusterActivityStream").ClusterActivityStream;
export declare const ClusterActivityStream: typeof import("@pulumi/aws/rds/clusterActivityStream").ClusterActivityStream;
export { ClusterEndpointArgs, ClusterEndpointState } from "@pulumi/aws/rds/clusterEndpoint";
export type ClusterEndpoint = import("@pulumi/aws/rds/clusterEndpoint").ClusterEndpoint;
export declare const ClusterEndpoint: typeof import("@pulumi/aws/rds/clusterEndpoint").ClusterEndpoint;
export { ClusterInstanceArgs, ClusterInstanceState } from "@pulumi/aws/rds/clusterInstance";
export type ClusterInstance = import("@pulumi/aws/rds/clusterInstance").ClusterInstance;
export declare const ClusterInstance: typeof import("@pulumi/aws/rds/clusterInstance").ClusterInstance;
export { ClusterParameterGroupArgs, ClusterParameterGroupState } from "@pulumi/aws/rds/clusterParameterGroup";
export type ClusterParameterGroup = import("@pulumi/aws/rds/clusterParameterGroup").ClusterParameterGroup;
export declare const ClusterParameterGroup: typeof import("@pulumi/aws/rds/clusterParameterGroup").ClusterParameterGroup;
export { ClusterRoleAssociationArgs, ClusterRoleAssociationState } from "@pulumi/aws/rds/clusterRoleAssociation";
export type ClusterRoleAssociation = import("@pulumi/aws/rds/clusterRoleAssociation").ClusterRoleAssociation;
export declare const ClusterRoleAssociation: typeof import("@pulumi/aws/rds/clusterRoleAssociation").ClusterRoleAssociation;
export { ClusterSnapshotArgs, ClusterSnapshotState } from "@pulumi/aws/rds/clusterSnapshot";
export type ClusterSnapshot = import("@pulumi/aws/rds/clusterSnapshot").ClusterSnapshot;
export declare const ClusterSnapshot: typeof import("@pulumi/aws/rds/clusterSnapshot").ClusterSnapshot;
export { ClusterSnapshotCopyArgs, ClusterSnapshotCopyState } from "@pulumi/aws/rds/clusterSnapshotCopy";
export type ClusterSnapshotCopy = import("@pulumi/aws/rds/clusterSnapshotCopy").ClusterSnapshotCopy;
export declare const ClusterSnapshotCopy: typeof import("@pulumi/aws/rds/clusterSnapshotCopy").ClusterSnapshotCopy;
export { CustomDbEngineVersionArgs, CustomDbEngineVersionState } from "@pulumi/aws/rds/customDbEngineVersion";
export type CustomDbEngineVersion = import("@pulumi/aws/rds/customDbEngineVersion").CustomDbEngineVersion;
export declare const CustomDbEngineVersion: typeof import("@pulumi/aws/rds/customDbEngineVersion").CustomDbEngineVersion;
export * from "@pulumi/aws/rds/engineMode";
export * from "@pulumi/aws/rds/engineType";
export { EventSubscriptionArgs, EventSubscriptionState } from "@pulumi/aws/rds/eventSubscription";
export type EventSubscription = import("@pulumi/aws/rds/eventSubscription").EventSubscription;
export declare const EventSubscription: typeof import("@pulumi/aws/rds/eventSubscription").EventSubscription;
export { ExportTaskArgs, ExportTaskState } from "@pulumi/aws/rds/exportTask";
export type ExportTask = import("@pulumi/aws/rds/exportTask").ExportTask;
export declare const ExportTask: typeof import("@pulumi/aws/rds/exportTask").ExportTask;
export { GetCertificateArgs, GetCertificateResult, GetCertificateOutputArgs } from "@pulumi/aws/rds/getCertificate";
export declare const getCertificate: typeof import("@pulumi/aws/rds/getCertificate").getCertificate;
export declare const getCertificateOutput: typeof import("@pulumi/aws/rds/getCertificate").getCertificateOutput;
export { GetClusterArgs, GetClusterResult, GetClusterOutputArgs } from "@pulumi/aws/rds/getCluster";
export declare const getCluster: typeof import("@pulumi/aws/rds/getCluster").getCluster;
export declare const getClusterOutput: typeof import("@pulumi/aws/rds/getCluster").getClusterOutput;
export { GetClusterParameterGroupArgs, GetClusterParameterGroupResult, GetClusterParameterGroupOutputArgs } from "@pulumi/aws/rds/getClusterParameterGroup";
export declare const getClusterParameterGroup: typeof import("@pulumi/aws/rds/getClusterParameterGroup").getClusterParameterGroup;
export declare const getClusterParameterGroupOutput: typeof import("@pulumi/aws/rds/getClusterParameterGroup").getClusterParameterGroupOutput;
export { GetClusterSnapshotArgs, GetClusterSnapshotResult, GetClusterSnapshotOutputArgs } from "@pulumi/aws/rds/getClusterSnapshot";
export declare const getClusterSnapshot: typeof import("@pulumi/aws/rds/getClusterSnapshot").getClusterSnapshot;
export declare const getClusterSnapshotOutput: typeof import("@pulumi/aws/rds/getClusterSnapshot").getClusterSnapshotOutput;
export { GetClustersArgs, GetClustersResult, GetClustersOutputArgs } from "@pulumi/aws/rds/getClusters";
export declare const getClusters: typeof import("@pulumi/aws/rds/getClusters").getClusters;
export declare const getClustersOutput: typeof import("@pulumi/aws/rds/getClusters").getClustersOutput;
export { GetEngineVersionArgs, GetEngineVersionResult, GetEngineVersionOutputArgs } from "@pulumi/aws/rds/getEngineVersion";
export declare const getEngineVersion: typeof import("@pulumi/aws/rds/getEngineVersion").getEngineVersion;
export declare const getEngineVersionOutput: typeof import("@pulumi/aws/rds/getEngineVersion").getEngineVersionOutput;
export { GetEventCategoriesArgs, GetEventCategoriesResult, GetEventCategoriesOutputArgs } from "@pulumi/aws/rds/getEventCategories";
export declare const getEventCategories: typeof import("@pulumi/aws/rds/getEventCategories").getEventCategories;
export declare const getEventCategoriesOutput: typeof import("@pulumi/aws/rds/getEventCategories").getEventCategoriesOutput;
export { GetInstanceArgs, GetInstanceResult, GetInstanceOutputArgs } from "@pulumi/aws/rds/getInstance";
export declare const getInstance: typeof import("@pulumi/aws/rds/getInstance").getInstance;
export declare const getInstanceOutput: typeof import("@pulumi/aws/rds/getInstance").getInstanceOutput;
export { GetInstancesArgs, GetInstancesResult, GetInstancesOutputArgs } from "@pulumi/aws/rds/getInstances";
export declare const getInstances: typeof import("@pulumi/aws/rds/getInstances").getInstances;
export declare const getInstancesOutput: typeof import("@pulumi/aws/rds/getInstances").getInstancesOutput;
export { GetOrderableDbInstanceArgs, GetOrderableDbInstanceResult, GetOrderableDbInstanceOutputArgs } from "@pulumi/aws/rds/getOrderableDbInstance";
export declare const getOrderableDbInstance: typeof import("@pulumi/aws/rds/getOrderableDbInstance").getOrderableDbInstance;
export declare const getOrderableDbInstanceOutput: typeof import("@pulumi/aws/rds/getOrderableDbInstance").getOrderableDbInstanceOutput;
export { GetParameterGroupArgs, GetParameterGroupResult, GetParameterGroupOutputArgs } from "@pulumi/aws/rds/getParameterGroup";
export declare const getParameterGroup: typeof import("@pulumi/aws/rds/getParameterGroup").getParameterGroup;
export declare const getParameterGroupOutput: typeof import("@pulumi/aws/rds/getParameterGroup").getParameterGroupOutput;
export { GetProxyArgs, GetProxyResult, GetProxyOutputArgs } from "@pulumi/aws/rds/getProxy";
export declare const getProxy: typeof import("@pulumi/aws/rds/getProxy").getProxy;
export declare const getProxyOutput: typeof import("@pulumi/aws/rds/getProxy").getProxyOutput;
export { GetReservedInstanceOfferingArgs, GetReservedInstanceOfferingResult, GetReservedInstanceOfferingOutputArgs } from "@pulumi/aws/rds/getReservedInstanceOffering";
export declare const getReservedInstanceOffering: typeof import("@pulumi/aws/rds/getReservedInstanceOffering").getReservedInstanceOffering;
export declare const getReservedInstanceOfferingOutput: typeof import("@pulumi/aws/rds/getReservedInstanceOffering").getReservedInstanceOfferingOutput;
export { GetSnapshotArgs, GetSnapshotResult, GetSnapshotOutputArgs } from "@pulumi/aws/rds/getSnapshot";
export declare const getSnapshot: typeof import("@pulumi/aws/rds/getSnapshot").getSnapshot;
export declare const getSnapshotOutput: typeof import("@pulumi/aws/rds/getSnapshot").getSnapshotOutput;
export { GetSubnetGroupArgs, GetSubnetGroupResult, GetSubnetGroupOutputArgs } from "@pulumi/aws/rds/getSubnetGroup";
export declare const getSubnetGroup: typeof import("@pulumi/aws/rds/getSubnetGroup").getSubnetGroup;
export declare const getSubnetGroupOutput: typeof import("@pulumi/aws/rds/getSubnetGroup").getSubnetGroupOutput;
export { GlobalClusterArgs, GlobalClusterState } from "@pulumi/aws/rds/globalCluster";
export type GlobalCluster = import("@pulumi/aws/rds/globalCluster").GlobalCluster;
export declare const GlobalCluster: typeof import("@pulumi/aws/rds/globalCluster").GlobalCluster;
export { InstanceArgs, InstanceState } from "@pulumi/aws/rds/instance";
export type Instance = import("@pulumi/aws/rds/instance").Instance;
export declare const Instance: typeof import("@pulumi/aws/rds/instance").Instance;
export { InstanceAutomatedBackupsReplicationArgs, InstanceAutomatedBackupsReplicationState } from "@pulumi/aws/rds/instanceAutomatedBackupsReplication";
export type InstanceAutomatedBackupsReplication = import("@pulumi/aws/rds/instanceAutomatedBackupsReplication").InstanceAutomatedBackupsReplication;
export declare const InstanceAutomatedBackupsReplication: typeof import("@pulumi/aws/rds/instanceAutomatedBackupsReplication").InstanceAutomatedBackupsReplication;
export { InstanceDesiredStateArgs, InstanceDesiredStateState } from "@pulumi/aws/rds/instanceDesiredState";
export type InstanceDesiredState = import("@pulumi/aws/rds/instanceDesiredState").InstanceDesiredState;
export declare const InstanceDesiredState: typeof import("@pulumi/aws/rds/instanceDesiredState").InstanceDesiredState;
export * from "@pulumi/aws/rds/instanceType";
export { IntegrationArgs, IntegrationState } from "@pulumi/aws/rds/integration";
export type Integration = import("@pulumi/aws/rds/integration").Integration;
export declare const Integration: typeof import("@pulumi/aws/rds/integration").Integration;
export { OptionGroupArgs, OptionGroupState } from "@pulumi/aws/rds/optionGroup";
export type OptionGroup = import("@pulumi/aws/rds/optionGroup").OptionGroup;
export declare const OptionGroup: typeof import("@pulumi/aws/rds/optionGroup").OptionGroup;
export { ParameterGroupArgs, ParameterGroupState } from "@pulumi/aws/rds/parameterGroup";
export type ParameterGroup = import("@pulumi/aws/rds/parameterGroup").ParameterGroup;
export declare const ParameterGroup: typeof import("@pulumi/aws/rds/parameterGroup").ParameterGroup;
export { ProxyArgs, ProxyState } from "@pulumi/aws/rds/proxy";
export type Proxy = import("@pulumi/aws/rds/proxy").Proxy;
export declare const Proxy: typeof import("@pulumi/aws/rds/proxy").Proxy;
export { ProxyDefaultTargetGroupArgs, ProxyDefaultTargetGroupState } from "@pulumi/aws/rds/proxyDefaultTargetGroup";
export type ProxyDefaultTargetGroup = import("@pulumi/aws/rds/proxyDefaultTargetGroup").ProxyDefaultTargetGroup;
export declare const ProxyDefaultTargetGroup: typeof import("@pulumi/aws/rds/proxyDefaultTargetGroup").ProxyDefaultTargetGroup;
export { ProxyEndpointArgs, ProxyEndpointState } from "@pulumi/aws/rds/proxyEndpoint";
export type ProxyEndpoint = import("@pulumi/aws/rds/proxyEndpoint").ProxyEndpoint;
export declare const ProxyEndpoint: typeof import("@pulumi/aws/rds/proxyEndpoint").ProxyEndpoint;
export { ProxyTargetArgs, ProxyTargetState } from "@pulumi/aws/rds/proxyTarget";
export type ProxyTarget = import("@pulumi/aws/rds/proxyTarget").ProxyTarget;
export declare const ProxyTarget: typeof import("@pulumi/aws/rds/proxyTarget").ProxyTarget;
export { ReservedInstanceArgs, ReservedInstanceState } from "@pulumi/aws/rds/reservedInstance";
export type ReservedInstance = import("@pulumi/aws/rds/reservedInstance").ReservedInstance;
export declare const ReservedInstance: typeof import("@pulumi/aws/rds/reservedInstance").ReservedInstance;
export { RoleAssociationArgs, RoleAssociationState } from "@pulumi/aws/rds/roleAssociation";
export type RoleAssociation = import("@pulumi/aws/rds/roleAssociation").RoleAssociation;
export declare const RoleAssociation: typeof import("@pulumi/aws/rds/roleAssociation").RoleAssociation;
export { ShardGroupArgs, ShardGroupState } from "@pulumi/aws/rds/shardGroup";
export type ShardGroup = import("@pulumi/aws/rds/shardGroup").ShardGroup;
export declare const ShardGroup: typeof import("@pulumi/aws/rds/shardGroup").ShardGroup;
export { SnapshotArgs, SnapshotState } from "@pulumi/aws/rds/snapshot";
export type Snapshot = import("@pulumi/aws/rds/snapshot").Snapshot;
export declare const Snapshot: typeof import("@pulumi/aws/rds/snapshot").Snapshot;
export { SnapshotCopyArgs, SnapshotCopyState } from "@pulumi/aws/rds/snapshotCopy";
export type SnapshotCopy = import("@pulumi/aws/rds/snapshotCopy").SnapshotCopy;
export declare const SnapshotCopy: typeof import("@pulumi/aws/rds/snapshotCopy").SnapshotCopy;
export * from "@pulumi/aws/rds/storageType";
export { SubnetGroupArgs, SubnetGroupState } from "@pulumi/aws/rds/subnetGroup";
export type SubnetGroup = import("@pulumi/aws/rds/subnetGroup").SubnetGroup;
export declare const SubnetGroup: typeof import("@pulumi/aws/rds/subnetGroup").SubnetGroup;
export * from "@pulumi/aws/types/enums/rds";
