export { BucketArgs, BucketState } from "@pulumi/aws/lightsail/bucket";
export type Bucket = import("@pulumi/aws/lightsail/bucket").Bucket;
export declare const Bucket: typeof import("@pulumi/aws/lightsail/bucket").Bucket;
export { BucketAccessKeyArgs, BucketAccessKeyState } from "@pulumi/aws/lightsail/bucketAccessKey";
export type BucketAccessKey = import("@pulumi/aws/lightsail/bucketAccessKey").BucketAccessKey;
export declare const BucketAccessKey: typeof import("@pulumi/aws/lightsail/bucketAccessKey").BucketAccessKey;
export { BucketResourceAccessArgs, BucketResourceAccessState } from "@pulumi/aws/lightsail/bucketResourceAccess";
export type BucketResourceAccess = import("@pulumi/aws/lightsail/bucketResourceAccess").BucketResourceAccess;
export declare const BucketResourceAccess: typeof import("@pulumi/aws/lightsail/bucketResourceAccess").BucketResourceAccess;
export { CertificateArgs, CertificateState } from "@pulumi/aws/lightsail/certificate";
export type Certificate = import("@pulumi/aws/lightsail/certificate").Certificate;
export declare const Certificate: typeof import("@pulumi/aws/lightsail/certificate").Certificate;
export { ContainerServiceArgs, ContainerServiceState } from "@pulumi/aws/lightsail/containerService";
export type ContainerService = import("@pulumi/aws/lightsail/containerService").ContainerService;
export declare const ContainerService: typeof import("@pulumi/aws/lightsail/containerService").ContainerService;
export { ContainerServiceDeploymentVersionArgs, ContainerServiceDeploymentVersionState } from "@pulumi/aws/lightsail/containerServiceDeploymentVersion";
export type ContainerServiceDeploymentVersion = import("@pulumi/aws/lightsail/containerServiceDeploymentVersion").ContainerServiceDeploymentVersion;
export declare const ContainerServiceDeploymentVersion: typeof import("@pulumi/aws/lightsail/containerServiceDeploymentVersion").ContainerServiceDeploymentVersion;
export { DatabaseArgs, DatabaseState } from "@pulumi/aws/lightsail/database";
export type Database = import("@pulumi/aws/lightsail/database").Database;
export declare const Database: typeof import("@pulumi/aws/lightsail/database").Database;
export { DiskArgs, DiskState } from "@pulumi/aws/lightsail/disk";
export type Disk = import("@pulumi/aws/lightsail/disk").Disk;
export declare const Disk: typeof import("@pulumi/aws/lightsail/disk").Disk;
export { Disk_attachmentArgs, Disk_attachmentState } from "@pulumi/aws/lightsail/disk_attachment";
export type Disk_attachment = import("@pulumi/aws/lightsail/disk_attachment").Disk_attachment;
export declare const Disk_attachment: typeof import("@pulumi/aws/lightsail/disk_attachment").Disk_attachment;
export { DistributionArgs, DistributionState } from "@pulumi/aws/lightsail/distribution";
export type Distribution = import("@pulumi/aws/lightsail/distribution").Distribution;
export declare const Distribution: typeof import("@pulumi/aws/lightsail/distribution").Distribution;
export { DomainArgs, DomainState } from "@pulumi/aws/lightsail/domain";
export type Domain = import("@pulumi/aws/lightsail/domain").Domain;
export declare const Domain: typeof import("@pulumi/aws/lightsail/domain").Domain;
export { DomainEntryArgs, DomainEntryState } from "@pulumi/aws/lightsail/domainEntry";
export type DomainEntry = import("@pulumi/aws/lightsail/domainEntry").DomainEntry;
export declare const DomainEntry: typeof import("@pulumi/aws/lightsail/domainEntry").DomainEntry;
export { InstanceArgs, InstanceState } from "@pulumi/aws/lightsail/instance";
export type Instance = import("@pulumi/aws/lightsail/instance").Instance;
export declare const Instance: typeof import("@pulumi/aws/lightsail/instance").Instance;
export { InstancePublicPortsArgs, InstancePublicPortsState } from "@pulumi/aws/lightsail/instancePublicPorts";
export type InstancePublicPorts = import("@pulumi/aws/lightsail/instancePublicPorts").InstancePublicPorts;
export declare const InstancePublicPorts: typeof import("@pulumi/aws/lightsail/instancePublicPorts").InstancePublicPorts;
export { KeyPairArgs, KeyPairState } from "@pulumi/aws/lightsail/keyPair";
export type KeyPair = import("@pulumi/aws/lightsail/keyPair").KeyPair;
export declare const KeyPair: typeof import("@pulumi/aws/lightsail/keyPair").KeyPair;
export { LbArgs, LbState } from "@pulumi/aws/lightsail/lb";
export type Lb = import("@pulumi/aws/lightsail/lb").Lb;
export declare const Lb: typeof import("@pulumi/aws/lightsail/lb").Lb;
export { LbAttachmentArgs, LbAttachmentState } from "@pulumi/aws/lightsail/lbAttachment";
export type LbAttachment = import("@pulumi/aws/lightsail/lbAttachment").LbAttachment;
export declare const LbAttachment: typeof import("@pulumi/aws/lightsail/lbAttachment").LbAttachment;
export { LbCertificateArgs, LbCertificateState } from "@pulumi/aws/lightsail/lbCertificate";
export type LbCertificate = import("@pulumi/aws/lightsail/lbCertificate").LbCertificate;
export declare const LbCertificate: typeof import("@pulumi/aws/lightsail/lbCertificate").LbCertificate;
export { LbCertificateAttachmentArgs, LbCertificateAttachmentState } from "@pulumi/aws/lightsail/lbCertificateAttachment";
export type LbCertificateAttachment = import("@pulumi/aws/lightsail/lbCertificateAttachment").LbCertificateAttachment;
export declare const LbCertificateAttachment: typeof import("@pulumi/aws/lightsail/lbCertificateAttachment").LbCertificateAttachment;
export { LbHttpsRedirectionPolicyArgs, LbHttpsRedirectionPolicyState } from "@pulumi/aws/lightsail/lbHttpsRedirectionPolicy";
export type LbHttpsRedirectionPolicy = import("@pulumi/aws/lightsail/lbHttpsRedirectionPolicy").LbHttpsRedirectionPolicy;
export declare const LbHttpsRedirectionPolicy: typeof import("@pulumi/aws/lightsail/lbHttpsRedirectionPolicy").LbHttpsRedirectionPolicy;
export { LbStickinessPolicyArgs, LbStickinessPolicyState } from "@pulumi/aws/lightsail/lbStickinessPolicy";
export type LbStickinessPolicy = import("@pulumi/aws/lightsail/lbStickinessPolicy").LbStickinessPolicy;
export declare const LbStickinessPolicy: typeof import("@pulumi/aws/lightsail/lbStickinessPolicy").LbStickinessPolicy;
export { StaticIpArgs, StaticIpState } from "@pulumi/aws/lightsail/staticIp";
export type StaticIp = import("@pulumi/aws/lightsail/staticIp").StaticIp;
export declare const StaticIp: typeof import("@pulumi/aws/lightsail/staticIp").StaticIp;
export { StaticIpAttachmentArgs, StaticIpAttachmentState } from "@pulumi/aws/lightsail/staticIpAttachment";
export type StaticIpAttachment = import("@pulumi/aws/lightsail/staticIpAttachment").StaticIpAttachment;
export declare const StaticIpAttachment: typeof import("@pulumi/aws/lightsail/staticIpAttachment").StaticIpAttachment;
