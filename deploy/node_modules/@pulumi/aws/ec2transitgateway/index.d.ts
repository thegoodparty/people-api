export { ConnectArgs, ConnectState } from "@pulumi/aws/ec2transitgateway/connect";
export type Connect = import("@pulumi/aws/ec2transitgateway/connect").Connect;
export declare const Connect: typeof import("@pulumi/aws/ec2transitgateway/connect").Connect;
export { ConnectPeerArgs, ConnectPeerState } from "@pulumi/aws/ec2transitgateway/connectPeer";
export type ConnectPeer = import("@pulumi/aws/ec2transitgateway/connectPeer").ConnectPeer;
export declare const ConnectPeer: typeof import("@pulumi/aws/ec2transitgateway/connectPeer").ConnectPeer;
export { DefaultRouteTableAssociationArgs, DefaultRouteTableAssociationState } from "@pulumi/aws/ec2transitgateway/defaultRouteTableAssociation";
export type DefaultRouteTableAssociation = import("@pulumi/aws/ec2transitgateway/defaultRouteTableAssociation").DefaultRouteTableAssociation;
export declare const DefaultRouteTableAssociation: typeof import("@pulumi/aws/ec2transitgateway/defaultRouteTableAssociation").DefaultRouteTableAssociation;
export { DefaultRouteTablePropagationArgs, DefaultRouteTablePropagationState } from "@pulumi/aws/ec2transitgateway/defaultRouteTablePropagation";
export type DefaultRouteTablePropagation = import("@pulumi/aws/ec2transitgateway/defaultRouteTablePropagation").DefaultRouteTablePropagation;
export declare const DefaultRouteTablePropagation: typeof import("@pulumi/aws/ec2transitgateway/defaultRouteTablePropagation").DefaultRouteTablePropagation;
export { GetAttachmentArgs, GetAttachmentResult, GetAttachmentOutputArgs } from "@pulumi/aws/ec2transitgateway/getAttachment";
export declare const getAttachment: typeof import("@pulumi/aws/ec2transitgateway/getAttachment").getAttachment;
export declare const getAttachmentOutput: typeof import("@pulumi/aws/ec2transitgateway/getAttachment").getAttachmentOutput;
export { GetAttachmentsArgs, GetAttachmentsResult, GetAttachmentsOutputArgs } from "@pulumi/aws/ec2transitgateway/getAttachments";
export declare const getAttachments: typeof import("@pulumi/aws/ec2transitgateway/getAttachments").getAttachments;
export declare const getAttachmentsOutput: typeof import("@pulumi/aws/ec2transitgateway/getAttachments").getAttachmentsOutput;
export { GetConnectArgs, GetConnectResult, GetConnectOutputArgs } from "@pulumi/aws/ec2transitgateway/getConnect";
export declare const getConnect: typeof import("@pulumi/aws/ec2transitgateway/getConnect").getConnect;
export declare const getConnectOutput: typeof import("@pulumi/aws/ec2transitgateway/getConnect").getConnectOutput;
export { GetConnectPeerArgs, GetConnectPeerResult, GetConnectPeerOutputArgs } from "@pulumi/aws/ec2transitgateway/getConnectPeer";
export declare const getConnectPeer: typeof import("@pulumi/aws/ec2transitgateway/getConnectPeer").getConnectPeer;
export declare const getConnectPeerOutput: typeof import("@pulumi/aws/ec2transitgateway/getConnectPeer").getConnectPeerOutput;
export { GetDirectConnectGatewayAttachmentArgs, GetDirectConnectGatewayAttachmentResult, GetDirectConnectGatewayAttachmentOutputArgs } from "@pulumi/aws/ec2transitgateway/getDirectConnectGatewayAttachment";
export declare const getDirectConnectGatewayAttachment: typeof import("@pulumi/aws/ec2transitgateway/getDirectConnectGatewayAttachment").getDirectConnectGatewayAttachment;
export declare const getDirectConnectGatewayAttachmentOutput: typeof import("@pulumi/aws/ec2transitgateway/getDirectConnectGatewayAttachment").getDirectConnectGatewayAttachmentOutput;
export { GetMulticastDomainArgs, GetMulticastDomainResult, GetMulticastDomainOutputArgs } from "@pulumi/aws/ec2transitgateway/getMulticastDomain";
export declare const getMulticastDomain: typeof import("@pulumi/aws/ec2transitgateway/getMulticastDomain").getMulticastDomain;
export declare const getMulticastDomainOutput: typeof import("@pulumi/aws/ec2transitgateway/getMulticastDomain").getMulticastDomainOutput;
export { GetPeeringAttachmentArgs, GetPeeringAttachmentResult, GetPeeringAttachmentOutputArgs } from "@pulumi/aws/ec2transitgateway/getPeeringAttachment";
export declare const getPeeringAttachment: typeof import("@pulumi/aws/ec2transitgateway/getPeeringAttachment").getPeeringAttachment;
export declare const getPeeringAttachmentOutput: typeof import("@pulumi/aws/ec2transitgateway/getPeeringAttachment").getPeeringAttachmentOutput;
export { GetPeeringAttachmentsArgs, GetPeeringAttachmentsResult, GetPeeringAttachmentsOutputArgs } from "@pulumi/aws/ec2transitgateway/getPeeringAttachments";
export declare const getPeeringAttachments: typeof import("@pulumi/aws/ec2transitgateway/getPeeringAttachments").getPeeringAttachments;
export declare const getPeeringAttachmentsOutput: typeof import("@pulumi/aws/ec2transitgateway/getPeeringAttachments").getPeeringAttachmentsOutput;
export { GetRouteTableArgs, GetRouteTableResult, GetRouteTableOutputArgs } from "@pulumi/aws/ec2transitgateway/getRouteTable";
export declare const getRouteTable: typeof import("@pulumi/aws/ec2transitgateway/getRouteTable").getRouteTable;
export declare const getRouteTableOutput: typeof import("@pulumi/aws/ec2transitgateway/getRouteTable").getRouteTableOutput;
export { GetRouteTableAssociationsArgs, GetRouteTableAssociationsResult, GetRouteTableAssociationsOutputArgs } from "@pulumi/aws/ec2transitgateway/getRouteTableAssociations";
export declare const getRouteTableAssociations: typeof import("@pulumi/aws/ec2transitgateway/getRouteTableAssociations").getRouteTableAssociations;
export declare const getRouteTableAssociationsOutput: typeof import("@pulumi/aws/ec2transitgateway/getRouteTableAssociations").getRouteTableAssociationsOutput;
export { GetRouteTablePropagationsArgs, GetRouteTablePropagationsResult, GetRouteTablePropagationsOutputArgs } from "@pulumi/aws/ec2transitgateway/getRouteTablePropagations";
export declare const getRouteTablePropagations: typeof import("@pulumi/aws/ec2transitgateway/getRouteTablePropagations").getRouteTablePropagations;
export declare const getRouteTablePropagationsOutput: typeof import("@pulumi/aws/ec2transitgateway/getRouteTablePropagations").getRouteTablePropagationsOutput;
export { GetRouteTableRoutesArgs, GetRouteTableRoutesResult, GetRouteTableRoutesOutputArgs } from "@pulumi/aws/ec2transitgateway/getRouteTableRoutes";
export declare const getRouteTableRoutes: typeof import("@pulumi/aws/ec2transitgateway/getRouteTableRoutes").getRouteTableRoutes;
export declare const getRouteTableRoutesOutput: typeof import("@pulumi/aws/ec2transitgateway/getRouteTableRoutes").getRouteTableRoutesOutput;
export { GetTransitGatewayArgs, GetTransitGatewayResult, GetTransitGatewayOutputArgs } from "@pulumi/aws/ec2transitgateway/getTransitGateway";
export declare const getTransitGateway: typeof import("@pulumi/aws/ec2transitgateway/getTransitGateway").getTransitGateway;
export declare const getTransitGatewayOutput: typeof import("@pulumi/aws/ec2transitgateway/getTransitGateway").getTransitGatewayOutput;
export { GetVpcAttachmentArgs, GetVpcAttachmentResult, GetVpcAttachmentOutputArgs } from "@pulumi/aws/ec2transitgateway/getVpcAttachment";
export declare const getVpcAttachment: typeof import("@pulumi/aws/ec2transitgateway/getVpcAttachment").getVpcAttachment;
export declare const getVpcAttachmentOutput: typeof import("@pulumi/aws/ec2transitgateway/getVpcAttachment").getVpcAttachmentOutput;
export { GetVpcAttachmentsArgs, GetVpcAttachmentsResult, GetVpcAttachmentsOutputArgs } from "@pulumi/aws/ec2transitgateway/getVpcAttachments";
export declare const getVpcAttachments: typeof import("@pulumi/aws/ec2transitgateway/getVpcAttachments").getVpcAttachments;
export declare const getVpcAttachmentsOutput: typeof import("@pulumi/aws/ec2transitgateway/getVpcAttachments").getVpcAttachmentsOutput;
export { GetVpnAttachmentArgs, GetVpnAttachmentResult, GetVpnAttachmentOutputArgs } from "@pulumi/aws/ec2transitgateway/getVpnAttachment";
export declare const getVpnAttachment: typeof import("@pulumi/aws/ec2transitgateway/getVpnAttachment").getVpnAttachment;
export declare const getVpnAttachmentOutput: typeof import("@pulumi/aws/ec2transitgateway/getVpnAttachment").getVpnAttachmentOutput;
export { InstanceConnectEndpointArgs, InstanceConnectEndpointState } from "@pulumi/aws/ec2transitgateway/instanceConnectEndpoint";
export type InstanceConnectEndpoint = import("@pulumi/aws/ec2transitgateway/instanceConnectEndpoint").InstanceConnectEndpoint;
export declare const InstanceConnectEndpoint: typeof import("@pulumi/aws/ec2transitgateway/instanceConnectEndpoint").InstanceConnectEndpoint;
export { InstanceStateArgs, InstanceStateState } from "@pulumi/aws/ec2transitgateway/instanceState";
export type InstanceState = import("@pulumi/aws/ec2transitgateway/instanceState").InstanceState;
export declare const InstanceState: typeof import("@pulumi/aws/ec2transitgateway/instanceState").InstanceState;
export { MulticastDomainArgs, MulticastDomainState } from "@pulumi/aws/ec2transitgateway/multicastDomain";
export type MulticastDomain = import("@pulumi/aws/ec2transitgateway/multicastDomain").MulticastDomain;
export declare const MulticastDomain: typeof import("@pulumi/aws/ec2transitgateway/multicastDomain").MulticastDomain;
export { MulticastDomainAssociationArgs, MulticastDomainAssociationState } from "@pulumi/aws/ec2transitgateway/multicastDomainAssociation";
export type MulticastDomainAssociation = import("@pulumi/aws/ec2transitgateway/multicastDomainAssociation").MulticastDomainAssociation;
export declare const MulticastDomainAssociation: typeof import("@pulumi/aws/ec2transitgateway/multicastDomainAssociation").MulticastDomainAssociation;
export { MulticastGroupMemberArgs, MulticastGroupMemberState } from "@pulumi/aws/ec2transitgateway/multicastGroupMember";
export type MulticastGroupMember = import("@pulumi/aws/ec2transitgateway/multicastGroupMember").MulticastGroupMember;
export declare const MulticastGroupMember: typeof import("@pulumi/aws/ec2transitgateway/multicastGroupMember").MulticastGroupMember;
export { MulticastGroupSourceArgs, MulticastGroupSourceState } from "@pulumi/aws/ec2transitgateway/multicastGroupSource";
export type MulticastGroupSource = import("@pulumi/aws/ec2transitgateway/multicastGroupSource").MulticastGroupSource;
export declare const MulticastGroupSource: typeof import("@pulumi/aws/ec2transitgateway/multicastGroupSource").MulticastGroupSource;
export { PeeringAttachmentArgs, PeeringAttachmentState } from "@pulumi/aws/ec2transitgateway/peeringAttachment";
export type PeeringAttachment = import("@pulumi/aws/ec2transitgateway/peeringAttachment").PeeringAttachment;
export declare const PeeringAttachment: typeof import("@pulumi/aws/ec2transitgateway/peeringAttachment").PeeringAttachment;
export { PeeringAttachmentAccepterArgs, PeeringAttachmentAccepterState } from "@pulumi/aws/ec2transitgateway/peeringAttachmentAccepter";
export type PeeringAttachmentAccepter = import("@pulumi/aws/ec2transitgateway/peeringAttachmentAccepter").PeeringAttachmentAccepter;
export declare const PeeringAttachmentAccepter: typeof import("@pulumi/aws/ec2transitgateway/peeringAttachmentAccepter").PeeringAttachmentAccepter;
export { PolicyTableArgs, PolicyTableState } from "@pulumi/aws/ec2transitgateway/policyTable";
export type PolicyTable = import("@pulumi/aws/ec2transitgateway/policyTable").PolicyTable;
export declare const PolicyTable: typeof import("@pulumi/aws/ec2transitgateway/policyTable").PolicyTable;
export { PolicyTableAssociationArgs, PolicyTableAssociationState } from "@pulumi/aws/ec2transitgateway/policyTableAssociation";
export type PolicyTableAssociation = import("@pulumi/aws/ec2transitgateway/policyTableAssociation").PolicyTableAssociation;
export declare const PolicyTableAssociation: typeof import("@pulumi/aws/ec2transitgateway/policyTableAssociation").PolicyTableAssociation;
export { PrefixListReferenceArgs, PrefixListReferenceState } from "@pulumi/aws/ec2transitgateway/prefixListReference";
export type PrefixListReference = import("@pulumi/aws/ec2transitgateway/prefixListReference").PrefixListReference;
export declare const PrefixListReference: typeof import("@pulumi/aws/ec2transitgateway/prefixListReference").PrefixListReference;
export { RouteArgs, RouteState } from "@pulumi/aws/ec2transitgateway/route";
export type Route = import("@pulumi/aws/ec2transitgateway/route").Route;
export declare const Route: typeof import("@pulumi/aws/ec2transitgateway/route").Route;
export { RouteTableArgs, RouteTableState } from "@pulumi/aws/ec2transitgateway/routeTable";
export type RouteTable = import("@pulumi/aws/ec2transitgateway/routeTable").RouteTable;
export declare const RouteTable: typeof import("@pulumi/aws/ec2transitgateway/routeTable").RouteTable;
export { RouteTableAssociationArgs, RouteTableAssociationState } from "@pulumi/aws/ec2transitgateway/routeTableAssociation";
export type RouteTableAssociation = import("@pulumi/aws/ec2transitgateway/routeTableAssociation").RouteTableAssociation;
export declare const RouteTableAssociation: typeof import("@pulumi/aws/ec2transitgateway/routeTableAssociation").RouteTableAssociation;
export { RouteTablePropagationArgs, RouteTablePropagationState } from "@pulumi/aws/ec2transitgateway/routeTablePropagation";
export type RouteTablePropagation = import("@pulumi/aws/ec2transitgateway/routeTablePropagation").RouteTablePropagation;
export declare const RouteTablePropagation: typeof import("@pulumi/aws/ec2transitgateway/routeTablePropagation").RouteTablePropagation;
export { TransitGatewayArgs, TransitGatewayState } from "@pulumi/aws/ec2transitgateway/transitGateway";
export type TransitGateway = import("@pulumi/aws/ec2transitgateway/transitGateway").TransitGateway;
export declare const TransitGateway: typeof import("@pulumi/aws/ec2transitgateway/transitGateway").TransitGateway;
export { VpcAttachmentArgs, VpcAttachmentState } from "@pulumi/aws/ec2transitgateway/vpcAttachment";
export type VpcAttachment = import("@pulumi/aws/ec2transitgateway/vpcAttachment").VpcAttachment;
export declare const VpcAttachment: typeof import("@pulumi/aws/ec2transitgateway/vpcAttachment").VpcAttachment;
export { VpcAttachmentAccepterArgs, VpcAttachmentAccepterState } from "@pulumi/aws/ec2transitgateway/vpcAttachmentAccepter";
export type VpcAttachmentAccepter = import("@pulumi/aws/ec2transitgateway/vpcAttachmentAccepter").VpcAttachmentAccepter;
export declare const VpcAttachmentAccepter: typeof import("@pulumi/aws/ec2transitgateway/vpcAttachmentAccepter").VpcAttachmentAccepter;
