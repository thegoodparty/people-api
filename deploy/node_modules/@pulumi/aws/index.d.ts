export * from "@pulumi/aws/arn";
export { GetArnArgs, GetArnResult, GetArnOutputArgs } from "@pulumi/aws/getArn";
export declare const getArn: typeof import("@pulumi/aws/getArn").getArn;
export declare const getArnOutput: typeof import("@pulumi/aws/getArn").getArnOutput;
export { GetAvailabilityZoneArgs, GetAvailabilityZoneResult, GetAvailabilityZoneOutputArgs } from "@pulumi/aws/getAvailabilityZone";
export declare const getAvailabilityZone: typeof import("@pulumi/aws/getAvailabilityZone").getAvailabilityZone;
export declare const getAvailabilityZoneOutput: typeof import("@pulumi/aws/getAvailabilityZone").getAvailabilityZoneOutput;
export { GetAvailabilityZonesArgs, GetAvailabilityZonesResult, GetAvailabilityZonesOutputArgs } from "@pulumi/aws/getAvailabilityZones";
export declare const getAvailabilityZones: typeof import("@pulumi/aws/getAvailabilityZones").getAvailabilityZones;
export declare const getAvailabilityZonesOutput: typeof import("@pulumi/aws/getAvailabilityZones").getAvailabilityZonesOutput;
export { GetBillingServiceAccountArgs, GetBillingServiceAccountResult, GetBillingServiceAccountOutputArgs } from "@pulumi/aws/getBillingServiceAccount";
export declare const getBillingServiceAccount: typeof import("@pulumi/aws/getBillingServiceAccount").getBillingServiceAccount;
export declare const getBillingServiceAccountOutput: typeof import("@pulumi/aws/getBillingServiceAccount").getBillingServiceAccountOutput;
export { GetCallerIdentityArgs, GetCallerIdentityResult, GetCallerIdentityOutputArgs } from "@pulumi/aws/getCallerIdentity";
export declare const getCallerIdentity: typeof import("@pulumi/aws/getCallerIdentity").getCallerIdentity;
export declare const getCallerIdentityOutput: typeof import("@pulumi/aws/getCallerIdentity").getCallerIdentityOutput;
export { GetDefaultTagsArgs, GetDefaultTagsResult, GetDefaultTagsOutputArgs } from "@pulumi/aws/getDefaultTags";
export declare const getDefaultTags: typeof import("@pulumi/aws/getDefaultTags").getDefaultTags;
export declare const getDefaultTagsOutput: typeof import("@pulumi/aws/getDefaultTags").getDefaultTagsOutput;
export { GetIpRangesArgs, GetIpRangesResult, GetIpRangesOutputArgs } from "@pulumi/aws/getIpRanges";
export declare const getIpRanges: typeof import("@pulumi/aws/getIpRanges").getIpRanges;
export declare const getIpRangesOutput: typeof import("@pulumi/aws/getIpRanges").getIpRangesOutput;
export { GetPartitionArgs, GetPartitionResult, GetPartitionOutputArgs } from "@pulumi/aws/getPartition";
export declare const getPartition: typeof import("@pulumi/aws/getPartition").getPartition;
export declare const getPartitionOutput: typeof import("@pulumi/aws/getPartition").getPartitionOutput;
export { GetRegionArgs, GetRegionResult, GetRegionOutputArgs } from "@pulumi/aws/getRegion";
export declare const getRegion: typeof import("@pulumi/aws/getRegion").getRegion;
export declare const getRegionOutput: typeof import("@pulumi/aws/getRegion").getRegionOutput;
export { GetRegionsArgs, GetRegionsResult, GetRegionsOutputArgs } from "@pulumi/aws/getRegions";
export declare const getRegions: typeof import("@pulumi/aws/getRegions").getRegions;
export declare const getRegionsOutput: typeof import("@pulumi/aws/getRegions").getRegionsOutput;
export { GetServiceArgs, GetServiceResult, GetServiceOutputArgs } from "@pulumi/aws/getService";
export declare const getService: typeof import("@pulumi/aws/getService").getService;
export declare const getServiceOutput: typeof import("@pulumi/aws/getService").getServiceOutput;
export { GetServicePrincipalArgs, GetServicePrincipalResult, GetServicePrincipalOutputArgs } from "@pulumi/aws/getServicePrincipal";
export declare const getServicePrincipal: typeof import("@pulumi/aws/getServicePrincipal").getServicePrincipal;
export declare const getServicePrincipalOutput: typeof import("@pulumi/aws/getServicePrincipal").getServicePrincipalOutput;
export { ProviderArgs } from "@pulumi/aws/provider";
export type Provider = import("@pulumi/aws/provider").Provider;
export declare const Provider: typeof import("@pulumi/aws/provider").Provider;
export * from "@pulumi/aws/region";
export * from "@pulumi/aws/tags";
export * from "@pulumi/aws/utils";
export * from "@pulumi/aws/types/enums";
import * as accessanalyzer from "@pulumi/aws/accessanalyzer";
import * as account from "@pulumi/aws/account";
import * as acm from "@pulumi/aws/acm";
import * as acmpca from "@pulumi/aws/acmpca";
import * as alb from "@pulumi/aws/alb";
import * as amp from "@pulumi/aws/amp";
import * as amplify from "@pulumi/aws/amplify";
import * as apigateway from "@pulumi/aws/apigateway";
import * as apigatewayv2 from "@pulumi/aws/apigatewayv2";
import * as appautoscaling from "@pulumi/aws/appautoscaling";
import * as appconfig from "@pulumi/aws/appconfig";
import * as appfabric from "@pulumi/aws/appfabric";
import * as appflow from "@pulumi/aws/appflow";
import * as appintegrations from "@pulumi/aws/appintegrations";
import * as applicationinsights from "@pulumi/aws/applicationinsights";
import * as applicationloadbalancing from "@pulumi/aws/applicationloadbalancing";
import * as appmesh from "@pulumi/aws/appmesh";
import * as apprunner from "@pulumi/aws/apprunner";
import * as appstream from "@pulumi/aws/appstream";
import * as appsync from "@pulumi/aws/appsync";
import * as athena from "@pulumi/aws/athena";
import * as auditmanager from "@pulumi/aws/auditmanager";
import * as autoscaling from "@pulumi/aws/autoscaling";
import * as autoscalingplans from "@pulumi/aws/autoscalingplans";
import * as backup from "@pulumi/aws/backup";
import * as batch from "@pulumi/aws/batch";
import * as bcmdata from "@pulumi/aws/bcmdata";
import * as bedrock from "@pulumi/aws/bedrock";
import * as bedrockfoundation from "@pulumi/aws/bedrockfoundation";
import * as bedrockmodel from "@pulumi/aws/bedrockmodel";
import * as budgets from "@pulumi/aws/budgets";
import * as cfg from "@pulumi/aws/cfg";
import * as chatbot from "@pulumi/aws/chatbot";
import * as chime from "@pulumi/aws/chime";
import * as chimesdkmediapipelines from "@pulumi/aws/chimesdkmediapipelines";
import * as cleanrooms from "@pulumi/aws/cleanrooms";
import * as cloud9 from "@pulumi/aws/cloud9";
import * as cloudcontrol from "@pulumi/aws/cloudcontrol";
import * as cloudformation from "@pulumi/aws/cloudformation";
import * as cloudfront from "@pulumi/aws/cloudfront";
import * as cloudhsmv2 from "@pulumi/aws/cloudhsmv2";
import * as cloudsearch from "@pulumi/aws/cloudsearch";
import * as cloudtrail from "@pulumi/aws/cloudtrail";
import * as cloudwatch from "@pulumi/aws/cloudwatch";
import * as codeartifact from "@pulumi/aws/codeartifact";
import * as codebuild from "@pulumi/aws/codebuild";
import * as codecatalyst from "@pulumi/aws/codecatalyst";
import * as codecommit from "@pulumi/aws/codecommit";
import * as codeconnections from "@pulumi/aws/codeconnections";
import * as codedeploy from "@pulumi/aws/codedeploy";
import * as codeguruprofiler from "@pulumi/aws/codeguruprofiler";
import * as codegurureviewer from "@pulumi/aws/codegurureviewer";
import * as codepipeline from "@pulumi/aws/codepipeline";
import * as codestarconnections from "@pulumi/aws/codestarconnections";
import * as codestarnotifications from "@pulumi/aws/codestarnotifications";
import * as cognito from "@pulumi/aws/cognito";
import * as comprehend from "@pulumi/aws/comprehend";
import * as computeoptimizer from "@pulumi/aws/computeoptimizer";
import * as config from "@pulumi/aws/config";
import * as connect from "@pulumi/aws/connect";
import * as controltower from "@pulumi/aws/controltower";
import * as costexplorer from "@pulumi/aws/costexplorer";
import * as costoptimizationhub from "@pulumi/aws/costoptimizationhub";
import * as cur from "@pulumi/aws/cur";
import * as customerprofiles from "@pulumi/aws/customerprofiles";
import * as dataexchange from "@pulumi/aws/dataexchange";
import * as datapipeline from "@pulumi/aws/datapipeline";
import * as datasync from "@pulumi/aws/datasync";
import * as datazone from "@pulumi/aws/datazone";
import * as dax from "@pulumi/aws/dax";
import * as detective from "@pulumi/aws/detective";
import * as devicefarm from "@pulumi/aws/devicefarm";
import * as devopsguru from "@pulumi/aws/devopsguru";
import * as directconnect from "@pulumi/aws/directconnect";
import * as directoryservice from "@pulumi/aws/directoryservice";
import * as dlm from "@pulumi/aws/dlm";
import * as dms from "@pulumi/aws/dms";
import * as docdb from "@pulumi/aws/docdb";
import * as drs from "@pulumi/aws/drs";
import * as dynamodb from "@pulumi/aws/dynamodb";
import * as ebs from "@pulumi/aws/ebs";
import * as ec2 from "@pulumi/aws/ec2";
import * as ec2clientvpn from "@pulumi/aws/ec2clientvpn";
import * as ec2transitgateway from "@pulumi/aws/ec2transitgateway";
import * as ecr from "@pulumi/aws/ecr";
import * as ecrpublic from "@pulumi/aws/ecrpublic";
import * as ecs from "@pulumi/aws/ecs";
import * as efs from "@pulumi/aws/efs";
import * as eks from "@pulumi/aws/eks";
import * as elasticache from "@pulumi/aws/elasticache";
import * as elasticbeanstalk from "@pulumi/aws/elasticbeanstalk";
import * as elasticsearch from "@pulumi/aws/elasticsearch";
import * as elastictranscoder from "@pulumi/aws/elastictranscoder";
import * as elb from "@pulumi/aws/elb";
import * as emr from "@pulumi/aws/emr";
import * as emrcontainers from "@pulumi/aws/emrcontainers";
import * as emrserverless from "@pulumi/aws/emrserverless";
import * as evidently from "@pulumi/aws/evidently";
import * as finspace from "@pulumi/aws/finspace";
import * as fis from "@pulumi/aws/fis";
import * as fms from "@pulumi/aws/fms";
import * as fsx from "@pulumi/aws/fsx";
import * as gamelift from "@pulumi/aws/gamelift";
import * as glacier from "@pulumi/aws/glacier";
import * as globalaccelerator from "@pulumi/aws/globalaccelerator";
import * as glue from "@pulumi/aws/glue";
import * as grafana from "@pulumi/aws/grafana";
import * as guardduty from "@pulumi/aws/guardduty";
import * as iam from "@pulumi/aws/iam";
import * as identitystore from "@pulumi/aws/identitystore";
import * as imagebuilder from "@pulumi/aws/imagebuilder";
import * as inspector from "@pulumi/aws/inspector";
import * as inspector2 from "@pulumi/aws/inspector2";
import * as iot from "@pulumi/aws/iot";
import * as ivs from "@pulumi/aws/ivs";
import * as ivschat from "@pulumi/aws/ivschat";
import * as kendra from "@pulumi/aws/kendra";
import * as keyspaces from "@pulumi/aws/keyspaces";
import * as kinesis from "@pulumi/aws/kinesis";
import * as kinesisanalyticsv2 from "@pulumi/aws/kinesisanalyticsv2";
import * as kms from "@pulumi/aws/kms";
import * as lakeformation from "@pulumi/aws/lakeformation";
import * as lambda from "@pulumi/aws/lambda";
import * as lb from "@pulumi/aws/lb";
import * as lex from "@pulumi/aws/lex";
import * as licensemanager from "@pulumi/aws/licensemanager";
import * as lightsail from "@pulumi/aws/lightsail";
import * as location from "@pulumi/aws/location";
import * as m2 from "@pulumi/aws/m2";
import * as macie from "@pulumi/aws/macie";
import * as macie2 from "@pulumi/aws/macie2";
import * as mediaconvert from "@pulumi/aws/mediaconvert";
import * as medialive from "@pulumi/aws/medialive";
import * as mediapackage from "@pulumi/aws/mediapackage";
import * as mediapackagev2 from "@pulumi/aws/mediapackagev2";
import * as mediastore from "@pulumi/aws/mediastore";
import * as memorydb from "@pulumi/aws/memorydb";
import * as mq from "@pulumi/aws/mq";
import * as msk from "@pulumi/aws/msk";
import * as mskconnect from "@pulumi/aws/mskconnect";
import * as mwaa from "@pulumi/aws/mwaa";
import * as neptune from "@pulumi/aws/neptune";
import * as neptunegraph from "@pulumi/aws/neptunegraph";
import * as networkfirewall from "@pulumi/aws/networkfirewall";
import * as networkmanager from "@pulumi/aws/networkmanager";
import * as networkmonitor from "@pulumi/aws/networkmonitor";
import * as oam from "@pulumi/aws/oam";
import * as opensearch from "@pulumi/aws/opensearch";
import * as opensearchingest from "@pulumi/aws/opensearchingest";
import * as opsworks from "@pulumi/aws/opsworks";
import * as organizations from "@pulumi/aws/organizations";
import * as outposts from "@pulumi/aws/outposts";
import * as paymentcryptography from "@pulumi/aws/paymentcryptography";
import * as pinpoint from "@pulumi/aws/pinpoint";
import * as pipes from "@pulumi/aws/pipes";
import * as polly from "@pulumi/aws/polly";
import * as pricing from "@pulumi/aws/pricing";
import * as qbusiness from "@pulumi/aws/qbusiness";
import * as qldb from "@pulumi/aws/qldb";
import * as quicksight from "@pulumi/aws/quicksight";
import * as ram from "@pulumi/aws/ram";
import * as rbin from "@pulumi/aws/rbin";
import * as rds from "@pulumi/aws/rds";
import * as redshift from "@pulumi/aws/redshift";
import * as redshiftdata from "@pulumi/aws/redshiftdata";
import * as redshiftserverless from "@pulumi/aws/redshiftserverless";
import * as rekognition from "@pulumi/aws/rekognition";
import * as resiliencehub from "@pulumi/aws/resiliencehub";
import * as resourceexplorer from "@pulumi/aws/resourceexplorer";
import * as resourcegroups from "@pulumi/aws/resourcegroups";
import * as resourcegroupstaggingapi from "@pulumi/aws/resourcegroupstaggingapi";
import * as rolesanywhere from "@pulumi/aws/rolesanywhere";
import * as route53 from "@pulumi/aws/route53";
import * as route53domains from "@pulumi/aws/route53domains";
import * as route53recoverycontrol from "@pulumi/aws/route53recoverycontrol";
import * as route53recoveryreadiness from "@pulumi/aws/route53recoveryreadiness";
import * as rum from "@pulumi/aws/rum";
import * as s3 from "@pulumi/aws/s3";
import * as s3control from "@pulumi/aws/s3control";
import * as s3outposts from "@pulumi/aws/s3outposts";
import * as s3tables from "@pulumi/aws/s3tables";
import * as sagemaker from "@pulumi/aws/sagemaker";
import * as scheduler from "@pulumi/aws/scheduler";
import * as schemas from "@pulumi/aws/schemas";
import * as secretsmanager from "@pulumi/aws/secretsmanager";
import * as securityhub from "@pulumi/aws/securityhub";
import * as securitylake from "@pulumi/aws/securitylake";
import * as serverlessrepository from "@pulumi/aws/serverlessrepository";
import * as servicecatalog from "@pulumi/aws/servicecatalog";
import * as servicediscovery from "@pulumi/aws/servicediscovery";
import * as servicequotas from "@pulumi/aws/servicequotas";
import * as ses from "@pulumi/aws/ses";
import * as sesv2 from "@pulumi/aws/sesv2";
import * as sfn from "@pulumi/aws/sfn";
import * as shield from "@pulumi/aws/shield";
import * as signer from "@pulumi/aws/signer";
import * as simpledb from "@pulumi/aws/simpledb";
import * as sns from "@pulumi/aws/sns";
import * as sqs from "@pulumi/aws/sqs";
import * as ssm from "@pulumi/aws/ssm";
import * as ssmcontacts from "@pulumi/aws/ssmcontacts";
import * as ssmincidents from "@pulumi/aws/ssmincidents";
import * as ssoadmin from "@pulumi/aws/ssoadmin";
import * as storagegateway from "@pulumi/aws/storagegateway";
import * as swf from "@pulumi/aws/swf";
import * as synthetics from "@pulumi/aws/synthetics";
import * as timestreaminfluxdb from "@pulumi/aws/timestreaminfluxdb";
import * as timestreamquery from "@pulumi/aws/timestreamquery";
import * as timestreamwrite from "@pulumi/aws/timestreamwrite";
import * as transcribe from "@pulumi/aws/transcribe";
import * as transfer from "@pulumi/aws/transfer";
import * as types from "@pulumi/aws/types";
import * as verifiedaccess from "@pulumi/aws/verifiedaccess";
import * as verifiedpermissions from "@pulumi/aws/verifiedpermissions";
import * as vpc from "@pulumi/aws/vpc";
import * as vpclattice from "@pulumi/aws/vpclattice";
import * as waf from "@pulumi/aws/waf";
import * as wafregional from "@pulumi/aws/wafregional";
import * as wafv2 from "@pulumi/aws/wafv2";
import * as worklink from "@pulumi/aws/worklink";
import * as workspaces from "@pulumi/aws/workspaces";
import * as xray from "@pulumi/aws/xray";
export { accessanalyzer, account, acm, acmpca, alb, amp, amplify, apigateway, apigatewayv2, appautoscaling, appconfig, appfabric, appflow, appintegrations, applicationinsights, applicationloadbalancing, appmesh, apprunner, appstream, appsync, athena, auditmanager, autoscaling, autoscalingplans, backup, batch, bcmdata, bedrock, bedrockfoundation, bedrockmodel, budgets, cfg, chatbot, chime, chimesdkmediapipelines, cleanrooms, cloud9, cloudcontrol, cloudformation, cloudfront, cloudhsmv2, cloudsearch, cloudtrail, cloudwatch, codeartifact, codebuild, codecatalyst, codecommit, codeconnections, codedeploy, codeguruprofiler, codegurureviewer, codepipeline, codestarconnections, codestarnotifications, cognito, comprehend, computeoptimizer, config, connect, controltower, costexplorer, costoptimizationhub, cur, customerprofiles, dataexchange, datapipeline, datasync, datazone, dax, detective, devicefarm, devopsguru, directconnect, directoryservice, dlm, dms, docdb, drs, dynamodb, ebs, ec2, ec2clientvpn, ec2transitgateway, ecr, ecrpublic, ecs, efs, eks, elasticache, elasticbeanstalk, elasticsearch, elastictranscoder, elb, emr, emrcontainers, emrserverless, evidently, finspace, fis, fms, fsx, gamelift, glacier, globalaccelerator, glue, grafana, guardduty, iam, identitystore, imagebuilder, inspector, inspector2, iot, ivs, ivschat, kendra, keyspaces, kinesis, kinesisanalyticsv2, kms, lakeformation, lambda, lb, lex, licensemanager, lightsail, location, m2, macie, macie2, mediaconvert, medialive, mediapackage, mediapackagev2, mediastore, memorydb, mq, msk, mskconnect, mwaa, neptune, neptunegraph, networkfirewall, networkmanager, networkmonitor, oam, opensearch, opensearchingest, opsworks, organizations, outposts, paymentcryptography, pinpoint, pipes, polly, pricing, qbusiness, qldb, quicksight, ram, rbin, rds, redshift, redshiftdata, redshiftserverless, rekognition, resiliencehub, resourceexplorer, resourcegroups, resourcegroupstaggingapi, rolesanywhere, route53, route53domains, route53recoverycontrol, route53recoveryreadiness, rum, s3, s3control, s3outposts, s3tables, sagemaker, scheduler, schemas, secretsmanager, securityhub, securitylake, serverlessrepository, servicecatalog, servicediscovery, servicequotas, ses, sesv2, sfn, shield, signer, simpledb, sns, sqs, ssm, ssmcontacts, ssmincidents, ssoadmin, storagegateway, swf, synthetics, timestreaminfluxdb, timestreamquery, timestreamwrite, transcribe, transfer, types, verifiedaccess, verifiedpermissions, vpc, vpclattice, waf, wafregional, wafv2, worklink, workspaces, xray, };
